{"ast":null,"code":"var _jsxFileName = \"/Users/dream_exp/Desktop/Projects/portfolio-web-2021-02/portfolio-web-2021-02/src/atoms/works/WorkImages.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\n\nconst WorkImages = props => {\n  const {\n    0: displayImagePath,\n    1: setDisplayImagePath\n  } = useState(props.imagePaths[0]);\n  const isMobile = useMediaQuery({\n    maxDeviceWidth: 767\n  });\n  return __jsx(WorkImagesComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, !isMobile && __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: \"currentImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: displayImagePath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    id: \"thumbnails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, props.imagePaths.map(path => {\n    return __jsx(\"img\", {\n      src: path,\n      onClick: () => {\n        setDisplayImagePath(path);\n      },\n      className: path === displayImagePath ? \"displayed\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    });\n  }))));\n};\n\nconst WorkImagesComponent = styled.div`\n    width: 100%;\n\n    div#currentImg {\n        width: 100%;\n\n        img {\n            width: 100%;\n        }\n    }\n\n    div#thumbnails {\n        display: flex;\n        flex-wrap: wrap;\n\n        img {\n            width: 150px;\n            margin-top: 20px;\n            margin-right: 30px;\n            cursor: pointer;\n            border: solid 2px #bbb;\n        }\n\n        img.displayed {\n            opacity: 0.4;\n        }\n    }\n`;\nexport default WorkImages;","map":{"version":3,"sources":["/Users/dream_exp/Desktop/Projects/portfolio-web-2021-02/portfolio-web-2021-02/src/atoms/works/WorkImages.tsx"],"names":["useState","styled","useMediaQuery","WorkImages","props","displayImagePath","setDisplayImagePath","imagePaths","isMobile","maxDeviceWidth","map","path","WorkImagesComponent","div"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAA4B;AAC3C,QAAM;AAAA,OAACC,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CN,QAAQ,CAACI,KAAK,CAACG,UAAN,CAAiB,CAAjB,CAAD,CAAxD;AACA,QAAMC,QAAQ,GAAGN,aAAa,CAAC;AAAEO,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAA9B;AAEA,SACI,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACD,QAAD,IACG,4BACA;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEH,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,EAIA;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,KAAK,CAACG,UAAN,CAAiBG,GAAjB,CAAqBC,IAAI,IAAI;AACzB,WACI;AACI,MAAA,GAAG,EAAEA,IADT;AAEI,MAAA,OAAO,EAAE,MAAM;AAACL,QAAAA,mBAAmB,CAACK,IAAD,CAAnB;AAA0B,OAF9C;AAGI,MAAA,SAAS,EAAGA,IAAI,KAAKN,gBAAT,GAA4B,WAA5B,GAA0C,EAH1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH,GARD,CAFR,CAJA,CAFR,CADJ;AAwBH,CA5BD;;AA8BA,MAAMO,mBAAmB,GAAGX,MAAM,CAACY,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;AA6BA,eAAeV,UAAf","sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\nimport { useMediaQuery } from 'react-responsive';\n\ninterface WorkImagesProps {\n    imagePaths: string[]\n}\n\nconst WorkImages = (props: WorkImagesProps) => {\n    const [displayImagePath, setDisplayImagePath] = useState(props.imagePaths[0]);\n    const isMobile = useMediaQuery({ maxDeviceWidth: 767 });\n\n    return(\n        <WorkImagesComponent>\n            {!isMobile &&\n                <> \n                <div id=\"currentImg\">\n                    <img src={displayImagePath} />\n                </div>\n                <div id=\"thumbnails\">\n                    {\n                        props.imagePaths.map(path => {\n                            return(\n                                <img\n                                    src={path}\n                                    onClick={() => {setDisplayImagePath(path)}}\n                                    className={ path === displayImagePath ? \"displayed\" : \"\" }\n                                />\n                            )\n                        })\n                    }\n                </div>\n                </>\n            }\n        </WorkImagesComponent>\n    );\n}\n\nconst WorkImagesComponent = styled.div`\n    width: 100%;\n\n    div#currentImg {\n        width: 100%;\n\n        img {\n            width: 100%;\n        }\n    }\n\n    div#thumbnails {\n        display: flex;\n        flex-wrap: wrap;\n\n        img {\n            width: 150px;\n            margin-top: 20px;\n            margin-right: 30px;\n            cursor: pointer;\n            border: solid 2px #bbb;\n        }\n\n        img.displayed {\n            opacity: 0.4;\n        }\n    }\n`;\n\nexport default WorkImages;"]},"metadata":{},"sourceType":"module"}