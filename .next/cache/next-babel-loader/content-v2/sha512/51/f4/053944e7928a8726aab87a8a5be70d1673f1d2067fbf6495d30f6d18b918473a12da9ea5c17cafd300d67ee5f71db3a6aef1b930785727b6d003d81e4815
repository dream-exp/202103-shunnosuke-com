{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dream_exp/Desktop/Projects/portfolio-web-2021-02/portfolio-web-2021-02/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/dream_exp/Desktop/Projects/portfolio-web-2021-02/portfolio-web-2021-02/src/atoms/Header/NavWithHumburger.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background: none;\\n    border: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { useState } from 'react';\n\nvar NavWithHumburger = function NavWithHumburger() {\n  _s();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  return __jsx(React.Fragment, null, __jsx(HumburgerButton, {\n    onClick: function onClick() {\n      setIsOpen(!isOpen);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/humburger.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  })), isOpen && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }));\n};\n\n_s(NavWithHumburger, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = NavWithHumburger;\nvar HumburgerButton = styled.button(_templateObject());\n_c2 = HumburgerButton;\nexport default NavWithHumburger;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavWithHumburger\");\n$RefreshReg$(_c2, \"HumburgerButton\");","map":{"version":3,"sources":["/Users/dream_exp/Desktop/Projects/portfolio-web-2021-02/portfolio-web-2021-02/src/atoms/Header/NavWithHumburger.tsx"],"names":["styled","useState","NavWithHumburger","isOpen","setIsOpen","HumburgerButton","button"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAoB,GAAM;AAAA;;AAAA,kBACAD,QAAQ,CAAC,KAAD,CADR;AAAA,MACrBE,MADqB;AAAA,MACbC,SADa;;AAG5B,SACI,4BACI,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,mBAAM;AAACA,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AAAmB,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAIKA,MAAM,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CADJ;AAUH,CAbD;;GAAMD,gB;;KAAAA,gB;AAeN,IAAMG,eAAe,GAAGL,MAAM,CAACM,MAAV,mBAArB;MAAMD,e;AAMN,eAAeH,gBAAf","sourcesContent":["import styled from 'styled-components';\nimport { useState } from 'react';\nimport Link from 'next/link';\n\nconst NavWithHumburger  = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    return(\n        <>\n            <HumburgerButton onClick={() => {setIsOpen(!isOpen)}} >\n                <img src=\"/images/humburger.png\" />\n            </HumburgerButton>\n            {isOpen &&\n                <p></p>\n            }\n        </>\n    );\n};\n\nconst HumburgerButton = styled.button`\n    background: none;\n    border: none;\n`\n\n\nexport default NavWithHumburger;"]},"metadata":{},"sourceType":"module"}